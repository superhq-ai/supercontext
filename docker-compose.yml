version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: pgvector/pgvector:pg15
    container_name: supercontext-postgres
    environment:
      POSTGRES_DB: supercontext
      POSTGRES_USER: supercontext
      POSTGRES_PASSWORD: supercontext_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/api/drizzle:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supercontext -d supercontext"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - supercontext-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: supercontext-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - supercontext-network

  # API Service
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: base
    container_name: supercontext-api
    env_file:
      - apps/api/.env
    environment:
      DATABASE_URL: postgres://supercontext:supercontext_password@postgres:5432/supercontext
      REDIS_URL: redis://redis:6379
      BETTER_AUTH_URL: http://localhost:3001
      SUPERCONTEXT_CLIENT_URL: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./:/workspace
      - /workspace/apps/api/node_modules
    working_dir: /workspace/apps/api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - supercontext-network
    command: bun run dev

  # WebService
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: base
    container_name: supercontext-web
    env_file:
      - apps/web/.env
    ports:
      - "3000:3000"
    volumes:
      - ./:/workspace
      - /workspace/node_modules
    working_dir: /workspace/apps/web
    depends_on:
      - api
    networks:
      - supercontext-network
    command: bun run dev





volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  supercontext-network:
    driver: bridge 